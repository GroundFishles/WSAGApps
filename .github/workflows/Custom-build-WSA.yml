name: Custom Build WSA
on:
 workflow_dispatch:
  inputs:
   arch:
    type: choice
    description: Architecture WSA.
    required: true
    options:
     - x64
     - arm64
    default: "x64"
   release_type:
    type: choice
    description: Release type of WSA. RP=Release Preview, WIS=Insider Slow, WIF=Insider Fast
    required: true
    options:
     - Retail
     - Release Preview
     - Beta
     - Dev
    default: "Release Preview"
   gapps_brand:
    type: choice
    description: GApps brand. "none" for no integration of GApps
    required: true
    options:
     - MindTheGapps
     - None
    default: "MindTheGapps"
#   gapps-variant:
#    type: choice
#    description: GApps variant (Only if you chose OpenGApps).
#    required: true
#    options: ["super","stock","full","mini","micro","nano","pico","tvstock","tvmini"]
#    default: "pico"
   magisk_ver:
    type: choice
    description: Magisk version.
    required: true
    options:
     - None
     - Stable
     - Beta
     - Canary
     - Debug
    default: "Stable"
   remove_amazon:
    description: Remove Amazon Appstore
    required: true
    type: boolean
    default: true
   compression:
    type: choice
    description: Compress format.
    required: true
    options:
     - ZIP
     - 7-Zip
     - XZ
    default: "ZIP"
   prerelease:
    description: Release as Prerelease
    required: false
    default: false
    type: boolean

jobs:
 build:
  name: Build WSA
  runs-on: ubuntu-latest

  steps:
  - name: Checkout
    uses: actions/checkout@v3

  - name: Install Dependencies
    run: |
     sudo apt update && sudo apt install -y setools lzip wine patchelf e2fsprogs python3-pip aria2 p7zip-full attr xz-utils unzip cabextract
     python3 -m pip install requests
     aria2c -d /usr/local/bin/ https://raw.githubusercontent.com/Winetricks/winetricks/master/src/winetricks
     sudo chmod +x /usr/local/bin/winetricks
     winetricks msxml6

  - name: Build WSA
    working-directory: ./scripts
    run: |
     DOWNLOAD_DIR=../download
     DOWNLOAD_CONF_NAME=download.list

     declare -A opts=( ["ARCH,x64"]="x64" ["ARCH,ARM64"]="arm64" ["RELEASE_TYPE,Retail"]="retail" ["RELEASE_TYPE,Release Preview"]="RP" ["RELEASE_TYPE,Beta"]="WIS" ["RELEASE_TYPE,Dev"]="WIF" ["MAGISK_VER,Stable"]="stable" ["MAGISK_VER,Beta"]="beta" ["MAGISK_VER,Canary"]="canary" ["MAGISK_VER,Debug"]="debug" ["MAGISK_VER,Custom"]="--magisk-custom" ["GAPPS_VAR,None"]="none" ["GAPPS_VAR,Pico"]="pico" ["GAPPS_VAR,Full"]="full" ["REMOVE_AMAZON,true"]="--remove-amazon" ["NOFIX_PROPS,true"]="--nofix-props" ["SKIP_DOWNLOAD_WSA,true"]="--skip-download-wsa" ["COMPRESSION,ZIP"]="zip" ["COMPRESSION,7-Zip"]="7z

     ARCH="${opts[ARCH,${{ inputs.arch }}]}"
     RELEASE_TYPE="${opts[RELEASE_TYPE,${{ inputs.release_type }}]}"
     CUSTOM_MAGISK="${opts[MAGISK_VER,Custom]}"
     MAGISK_VER="${opts[MAGISK_VER,Debug]}"
     ROOT_SOL="none"
     MAGISK_VER="${opts[MAGISK_VER,Stable]}"
     REMOVE_AMAZON="${opts[REMOVE_AMAZON,${{ inputs.remove_amazon }}]}"
     COMPRESSION="--compress --compress-format ${opts[COMPRESSION,${{ inputs.compression }}]}"


   
     COMMAND_LINE=(--arch "$ARCH" --release-type "$RELEASE_TYPE" --root-sol "$ROOT_SOL" --magisk-ver "$MAGISK_VER" "$CUSTOM_MAGISK" --gapps-brand "$GAPPS_BRAND" --gapps-variant "$GAPPS_VAR" "$COMPRESSION" "$REMOVE_AMAZON" "$NOFIX_PROPS" "$SKIP_DOWNLOAD_WSA" "$OFFLINE")
     echo "COMMAND_LINE=${COMMAND_LINE[*]}" 

     ./build.sh $(echo "${COMMAND_LINE[@]}")

  - name: Get tag version WSA
    shell: bash
    run: |
     regex="WSA_(.*)_${{ inputs.arch }}"
     if [[ $(ls ./output/*.${{ inputs.compression }}) =~ $regex ]]; then
       echo "wsaver=${BASH_REMATCH[1]}" >> $GITHUB_ENV
     else
       echo "wsaver=WSA" >> $GITHUB_ENV
     fi

  - name: Upload build to release
    uses: softprops/action-gh-release@v1
    with:
     files: ./output/*
     tag_name: WSA-${{ env.wsaver }}
     name: WSA ${{ env.wsaver }}
     prerelease: ${{ inputs.prerelease }}

  - name: Delete workflow runs
    uses: Mattraks/delete-workflow-runs@v2
    with:
     token: ${{ github.token }}
     repository: ${{ github.repository }}
     retain_days: 0
     keep_minimum_runs: 1
